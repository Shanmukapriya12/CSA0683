def assembly_line_scheduling(n, a1, a2, t1, t2, e1, e2, x1, x2):
    # Initialize the dp arrays
    dp1 = [0] * n
    dp2 = [0] * n
    
    # Base case: time to leave the first station
    dp1[0] = e1 + a1[0]
    dp2[0] = e2 + a2[0]
    
    # Fill the dp arrays
    for i in range(1, n):
        dp1[i] = min(dp1[i-1] + a1[i], dp2[i-1] + t2[i-1] + a1[i])
        dp2[i] = min(dp2[i-1] + a2[i], dp1[i-1] + t1[i-1] + a2[i])
    
    # Add the exit times
    final_time_1 = dp1[-1] + x1
    final_time_2 = dp2[-1] + x2
    
    # Return the minimum time
    return min(final_time_1, final_time_2)

# Test Case
n = 4
a1 = [4, 5, 3, 2]
a2 = [2, 10, 1, 4]
t1 = [0, 7, 4, 5]
t2 = [0, 9, 2, 8]
e1 = 10
e2 = 12
x1 = 18
x2 = 7

print(f"The minimum time required to process the product is: {assembly_line_scheduling(n, a1, a2, t1, t2, e1, e2, x1, x2)}")
