def champagneTower(poured, query_row, query_glass):
    # Initialize a list of lists to represent the pyramid
    pyramid = [[0] * (i + 1) for i in range(101)]
    
    # Pour the champagne into the top glass
    pyramid[0][0] = poured
    
    # Simulate the champagne pouring process
    for row in range(100):
        for glass in range(row + 1):
            if pyramid[row][glass] > 1:
                overflow = (pyramid[row][glass] - 1) / 2
                pyramid[row][glass] = 1
                pyramid[row + 1][glass] += overflow
                pyramid[row + 1][glass + 1] += overflow
    
    # Return the amount of champagne in the query glass, capped at 1
    return min(1, pyramid[query_row][query_glass])

# Example usage
poured = 1
query_row = 1
query_glass = 1
print(champagneTower(poured, query_row, query_glass))  # Output: 0.00000
